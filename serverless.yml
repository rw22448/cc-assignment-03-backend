service: cc-assignment-03-backend

custom:
  userTableName: users-${self:provider.stage}
  eventsTableName: events-${self:provider.stage}
  activeUsersTableName: active-users-${self:provider.stage}
  serverless-offline:
    noPrependStageInUrl: true

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { 'Fn::GetAtt': ['usersTable', 'Arn'] }
            - { 'Fn::GetAtt': ['activeUsersTable', 'Arn'] }
            - { 'Fn::GetAtt': ['eventsTable', 'Arn'] }
  environment:
    USERS_TABLE: ${self:custom.userTableName}
    EVENTS_TABLE: ${self:custom.eventsTableName}
    ACTIVE_USERS_TABLE: ${self:custom.activeUsersTableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: ANY /{proxy+}

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTableName}
    eventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.eventsTableName}
    activeUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.activeUsersTableName}
